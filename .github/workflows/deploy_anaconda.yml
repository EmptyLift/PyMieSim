name: Deploy Conda Package

on:
  push:
    branches: [ "master" ]
    tags:
      - '*'
  pull_request:
    branches: [ "master" ]



jobs:
  conda_deployment:
    name: Conda deployment of package for platform ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: devtools/conda-envs/build_env.yaml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Build and upload the conda packages
        uses: uibcdf/action-build-and-upload-conda-packages@v1.3.0
        with:
          meta_yaml_dir: .
          python-version: ${{ matrix.python-version }} # Values previously defined in `matrix`
          user: uibcdf
          label: auto
          token: ${{ secrets.ANACONDA_TOKEN }} # Replace with the right name of your secret


# jobs:
#   build_and_publish_conda_package:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Miniconda
#         uses: conda-incubator/setup-miniconda@v2
#         with:
#           channels: conda-forge
#           python-version: '3.11'

#       - name: Upload to Anaconda (if tag)
#         if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#         run: |
#           conda config --set anaconda_upload true

#       - name: Create Conda Environment and Install Dependencies
#         env:
#           ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}  # Ensure the Anaconda token is set
#         run: |
#           conda install conda-build anaconda-client conda-verify -y
#           conda build . -c martinpdes
